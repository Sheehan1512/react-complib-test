import type { BuildOptions } from 'vite';
import type { LibraryOptions } from 'vite';
import type { Plugin } from 'vite';

/**
 * Inject css at the top of each generated chunk file, only works with library mode.
 * @param libOptions Optional libOptions which will overwrite the relevant options.
 */
export declare function libInjectCss(libOptions?: LibOptions): Plugin;

export declare interface LibOptions extends LibraryOptions {
    build?: BuildOptions;
    rollupOptions?: BuildOptions['rollupOptions'];
}

/**
 * Help to generate lib entry object with similar directory structure.
 * 1. **If it is a file**, use filename without extension as entry name
 * 2. **If it is a directory**, assumes 'src/components', it will scan files under, then use `'src/components/xxx/index'` as entry and `'xxx'` as its name.
 * @param entryDirs directories to scan.
 * @returns lib entry object
 * @example
 * ```javascript
 * scanEntries([
 *   'src/index.ts',
 *   'src/components',
 * ])
 * ```
 */
export declare function scanEntries(entryDirs: string | string[]): Record<string, string>;

export { }
